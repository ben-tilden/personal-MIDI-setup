# key
# this file acts as reference for values in the global array and internal sysex formatting

# message routing key for signal messages (M1 = FF)
# if multiple, routes positioned left to right lowest value to highest
# 11 - launchkey
# FF - xtouch
# CC - channel
# 0F - xtouch filter
# 01 - lfo auv3 (mozaic)

# sysex key for value updates

# see doc

# output from files:

# xtouch
# sysex and CC to launchkey
# sysex to channel
# sysex to lfo auv3
# CC and note messages to xtouch device

# launchkey
# sysex to xtouch
# sysex to channel
# sysex to launchkey
# CC and note messages to iConnectMIDI

# channel
# note messages to iConnectMIDI

# drumParams:
# select $14 $15 $16
# level $17 $18 $19
# attack $20 $21 $22
# release $23 $24 $25
# pitch $26 $27 $28
# modAmount $29 $30 $31
# modRate $46 $47 $48
# waveguide $117 $118 $119

# when adding new passable value:
# 1. add key entry
# 2. add sysex reception
# 3. add ALIAS
# 4. add init set
# 5. add testing

# rules for push control
# 1. when a knob is set without turning, L should automatically be set to whatever is sent to the knob, otherwise it should be set to the current knob value
# NOTE tempo is an exception here because when the lighting is sent from xtouch, it does not loop back to the code until the knob is turned from the hardware - there is no opportunity to change the L value otherwise, so it must (unfortunately) manually be changed when the lighting is sent
# 2. if a knob is turning, L should only be set if knobPush is false
# 3. lighting should only be sent at knob release if the knob which is being turned does not already have code in xtouch that sends lighting for it (i.e. tempo) (the lighting change will be blocked otherwise)

# differences between channels

###
# channels 1-6 (DRUM)
###

# xtouch
  # channel constant
  # drum additions

# launchkey
  # channel one resets the global variable - others do not
  # channel constant

# channel
  # channel constant

# processing filter
  # drum chromaticization

# mapping filter
  # drum exclusive mappings

###
# channel 7 (FM)
###

# xtouch
  # channel constant
  # drum removals

# launchkey
  # channel constant

# channel
  # channel constant

# processing filter
  # remove drum chromaticization

# mapping filter
  # remove drum exclusive mappings

###
# channel 8 (BASS) # NOTE channel 9 is a wash since it's used to map to channel 10
###

# xtouch
  # channel constant
  # drum removals

# launchkey
  # channel constant

# channel
  # channel constant

# processing filter
  # remove drum chromaticization

# mapping filter
  # add bass exclusive mappings
  # remove drum exclusive mappings

###
# channel 10 (BEATS) # still needed in order to use drum roll etc.
###

# xtouch
  # channel constant
  # drum removals

# launchkey
  # channel constant

# channel
  # channel constant

# processing filter
  # remove drum chromaticization

# mapping filter
  # remove drum exclusive mappings

###
# channel 11 (SAMPLE) (normal)
###

# xtouch
  # channel constant
  # drum removals

# launchkey
  # channel constant

# channel
  # channel constant

# processing filter
  # remove drum chromaticization

# mapping filter
  # remove drum exclusive mappings

###
# channel 12 (SAMPLE) (pajen)
###

# xtouch
  # channel constant
  # drum removals

# launchkey
  # channel constant

# channel
  # channel constant

# processing filter
  # remove drum chromaticization

# mapping filter
  # remove drum exclusive mappings

// xtouch mini tempo explanation
// because tempo will be determined by ableton link midi clock, the first knob will determine which clock messages are heeded and which are ignored
// link runs clock at 24 ppqn, or 24 pulses per quarter note / beat
// there are multiple tempos, determined by knob 1 on the xtouch:

// 0. full range - this is as many tempos as we can fit
// 8/1 - 48
// 6/1 - 36
// 4/1 - 24
// 3/1 - 18
// 2/1 - 12
// 3/2 - 9
// 1/1 - 6
// 2/3 - 4
// 1/2 - 3
// 1/3 - 2
// 1/6 - 1

// 1. beatmaker - based on the default tempos of the drum roll in beatmaker pro - slightly fewer options than full range
// 4/1 - 24
// 2/1 - 12
// 3/2 - 9
// 1/1 - 6
// 2/3 - 4
// 1/2 - 3

// 2. factor of two - any tempo that is a factor of 2 of a 4/4 beat
// 16/1 - 96
// 8/1 - 48
// 4/1 - 24
// 2/1 - 12
// 1/1 - 6
// 1/2 - 3

// 3. factor of three - any tempo that is a factor of 3 of a 4/4 beat
// 12/1 - 72
// 6/1 - 36
// 3/1 - 18
// 3/2 - 9
// 2/3 - 4
// 1/3 - 2

// For the first, we have 11 modes, which translates to around 11.5 per
// 12 11 11 12 12 12 12 12 11 11 12
// For the second, we have 6 modes, which translates to around 21 per
// 22 21 21 21 21 22
// button 1 will decrease arp type / turn on set phrase mode
// button 9 will increase arp type / add rest as part of phrase
// button 2 will toggle arp / phrase
// button 10 will turn arp / phrase on or off

// NOTE compatible and incompatible functionality
// groupPushKnob and pushKnob:
  // with groupPushKnob on, pushKnob will not do anything
  // with pushKnob on, groupPushKnob will prevent knob release from doing anything
// groupPushKnob / pushKnob and drumParams
  // with either on (knob // 6, 7, and 8 for pushKnob), drumParams will not be able to be changed
// groupPushKnob / pushKnob and lfoNum
  // with either on (knob // 4 for pushKnob), lfoNum will not be able to be changed


Other notes:
------------
ARP can be used as a drum roll for any instrument by changing tempo accordingly
ARP can be used with different values for channel 10 / 11 - see what combinations of percussion work
Try using ARP and PHRASE at the same time for a channel
Try using ARP or PHRASE with the FM (and the FM's ARP)
Might be interesting to have ARP and PHRASE sync options to try ARP and PHRASE where it doesn't match Ableton link
if you pass a variable into a recursive function by reference is will almost always change mid function
Midifire can remain open in front of modstep, but modstep will be doing most of the sequencing
Fugue Machine can be used to reverse, invert, bounce phrase
Could map modstep to other buttons

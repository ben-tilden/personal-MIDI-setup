// launchkey mapping filter

@OnLoad

  // minimal layout
  ShowLayout 4

  // constant

  MIDIDrumVals = [0x31, 0x32, 0x33, 0x2D, 0x2E, 0x2F]

  MIDILaunchkeyPadVals = [0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x30]
  MIDIBeatsVals = [0x2A, 0x2E, 0x4B, 0x43, 0x24, 0x26, 0x2B, 0x32, 0x31, 0x27]
  MIDISampleVals = [0x41, 0x42, 0x43, 0x44, 0x3C, 0x3D, 0x3E, 0x3F, 0x45, 0x40]

  MIDILaunchkeyKnobVals = [0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B]
  MIDIDrumKnobVals = [0x31, 0x32, 0x33, 0x34, 0x0A, 0x67, 0x7E, 0x7F] // NOTE these last two vals are dummy vals to prevent inadvertent overloading
  MIDIBassKnobVals = [0x0B, 0x31, 0x05, 0x28]

  // variable

  padMode = 0
  // previous vals for drum
  FillArray drumVals, 60, 6

@End

// sysex reception

@OnSysex
  ReceiveSysex sysexData

  // block all sysex except padMode and init

  if sysexData[0] = 0x01 and sysexData[1] = 0x1D
    padMode = 0
    // previous vals for drum
    FillArray drumVals, 60, 6
  elseif sysexData[0] <> 0x3F // will receive channel as well
    Exit
  elseif sysexData[1] = 0x0C
    padMode = sysexData[2]
    Exit
  endif

@End

@OnMIDINote

  // set drumVals from channels 1-6 so pad (channel 10) matches up with last played note on drum
  if MIDICommand = 0x90 and MIDIChannel < 0x06
    drumVals[MIDIchannel] = MIDINote
  endif

  // map channel 10 pads
  if MIDIChannel = 09 and (MIDICommand = 0x90 or MIDICommand = 0x80)

    for i = 0 to 5
      if MIDINote = MIDIDrumVals[i]
        drumChannel = i + MIDICommand
        SendMIDIOut drumChannel, drumVals[i], MIDIByte3
        Exit
      endif
    endfor

    if padMode = 0

      for i = 0 to 9
        if MIDINote = MIDILaunchkeyPadVals[i]
          beatsChannel = 9 + MIDICommand
          SendMIDIOut beatsChannel, MIDIBeatsVals[i], MIDIByte3
          Exit
        endif
      endfor

    else

      for i = 0 to 9
        if MIDINote = MIDILaunchkeyPadVals[i]
          sampleChannel = 11 + MIDICommand
          SendMIDIOut sampleChannel, MIDISampleVals[i], MIDIByte3
          Exit
        endif
      endfor

    endif
  else
    SendMIDIThru
  endif

@End

@OnMIDICC

  // map launchkey knobs for drum and bass
  if MIDIByte2 = 0x1C
    SendMIDIOut MIDIByte1, MIDIDrumKnobVals[7], MIDIByte3
    Exit

  elseif MIDIByte2 = 0x68 or MIDIByte2 = 0x6A or MIDIByte2 = 0x6B or MIDIByte2 = 0x6C or MIDIByte2 = 0x6D
    // 69 could be added here if functionality added
    SendMIDIThru
    Exit

  elseif MIDIChannel < 0x06
    for i = 0 to 6
      if MIDIByte2 = MIDILaunchkeyKnobVals[i]
        SendMIDIOut MIDIByte1, MIDIDrumKnobVals[i], MIDIByte3
        Exit
      endif
    endfor

  elseif MIDIChannel = 0x07
    for i = 0 to 3
      if MIDIByte2 = MIDILaunchkeyKnobVals[i]
        SendMIDIOut MIDIByte1, MIDIBassKnobVals[i], MIDIByte3
        Exit
      endif
    endfor

  endif

@End

// processing filter

@Onload
  midiCCStandard = 0
  midiCCInterval = 0
  intervalDepth = 64
  trackingMode = 0

  intervalCCValues = [0, 6, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 67, 72, 77, 82, 87, 92, 97, 102, 107, 112, 117, 122, 127]

@End

// sysex reception

// trackingMode needs to be handled here as well
@OnSysex

  ReceiveSysex sysexData

  // init
  if sysexData[1] = 0x1C
    midiCCStandard = 0
    midiCCInterval = 0
    intervalDepth = 40
    trackingMode = 0
    Exit

  // trackingMode
  elseif sysexData[1] = 0x1F
    trackingMode = sysexData[2]
    Exit

  endif

@End

// chromaticize keys volca drum

@OnMIDINoteOn
  // if tracking is on
  if MIDIChannel < 6 and trackingMode <> 0 and MIDINote <> 127
    // send the channel, pitch control, and note number
    midiCCStandard = MIDINote + 1 // 1 is the offset here to align properly - this means the highest possible note is F# (126)
    if trackingMode = 1
      SendMIDICC MIDIChannel, 0x1C, midiCCStandard
    elseif trackingMode = 2
      // intervalDepth is divided into 25 separate groups, ranging 5 values from -12 to +12 semitones (with quantized pitch)
      // midiCCInterval has the potential to send messages which will cause issues if it goes below zero / above 126
      // including conditionals to prevent this
      for i = 0 to 24
        intervalValue = (i - 12) * 2 // -24 to 24

        if intervalDepth < intervalCCValues[i + 1] and intervalDepth >= intervalCCValues[i]
          midiCCInterval = midiCCStandard + intervalValue

          if midiCCInterval >= -26 and midiCCInterval < 127
            SendMIDICC MIDIChannel, 0x1A, midiCCStandard
            SendMIDICC MIDIChannel, 0x1B, midiCCInterval

          elseif midiCCInterval >= 127
            SendMIDICC MIDIChannel, 0x1A, midiCCStandard
            SendMIDICC MIDIChannel, 0x1B, 126

          elseif midiCCInterval < -26
            SendMIDICC MIDIChannel, 0x1A, midiCCStandard
            SendMIDICC MIDIChannel, 0x1B, 1

          endif         
        endif
      endfor

    endif
  endif
  SendMIDIThru
@End

@OnMIDINoteOff
  SendMIDIThru
@End

// interval setter

// knob 7 has already been deassigned to 0x7E to allow for interval level

// handle remote control of interval level
@OnMIDICC
  if MIDIChannel < 6 and MIDIByte2 = 0x7E
    intervalDepth = MIDIByte3
  else
    SendMIDIThru
  endif
@End

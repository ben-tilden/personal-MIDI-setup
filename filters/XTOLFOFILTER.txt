# xtouch to lfo filter

# filter out messages that don't have 01 as their routing (0F, 11, C1, CC)

# messages expected:   

# BLOCK | F0 11 1A 2E F7 - rest, sent from xtouch to launchkey
# BLOCK | F0 0F EE M0 M1 M2 F7 - message sent from xtouch to xtouch filter to send lighting back to xtouch (CC and note messages)
# BLOCK | F0 11 EE M0 M1 M2 F7 - message sent from xtouch to launchkey for CC output

# BLOCK | F0 C1    01    val  F7      arpPhraseToggle
# BLOCK | F0 C1    02    val  F7      arpPhraseOnOffToggle
# BLOCK | F0 CC    03    val  F7      tempoPulse
# BLOCK | F0 CC    04    val1 val2 F7 gate
# BLOCK | F0 C1    05    val  F7      velocity
# BLOCK | F0 C1    06    val  F7      arpValueModeMod
# BLOCK | F0 11/FF 07    val  F7      setPhrase
# BLOCK | F0 11    0B    val  F7      latch
# BLOCK | F0 CC/FF 19    60   F7      gateOpened

# ALLOW | F0 01    0D    val1 val2 F7 lfoKnob
# ALLOW | F0 01    0E    val1 val2 F7 lfoSync
# ALLOW | F0 01    0F    val1 val2 F7 lfoBase
# ALLOW | F0 01    10    val1 val2 F7 lfoInvert
# ALLOW | F0 01    11    val1 val2 F7 lfoOnOff
# ALLOW | F0 01    12    val  F7      lfoMuteAll
# ALLOW | F0 01    13    val1 val2 F7 lfoType
# ALLOW | F0 01    14    val  F7      lfoReset
# ALLOW | F0 01    15    00   F7      lfoResetAll
# ALLOW | F0 01    16    val1 val2 F7 lfoRate
# ALLOW | F0 01    17    val1 val2 F7 lfoDepth
# ALLOW | F0 01    18    val1 F7      lfoTempo
# ALLOW | F0 01    19    00   F7      lfoInit

IF M0 == F0
  IF M1 != 01
    BLOCK
    EXIT
  END
END

CX = XX +B
